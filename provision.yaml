---
- name: Setup nodes
  hosts: all
  become: true
  vars:
    deploy_user: "ansible"
    deploy_user_sshkey: https://github.com/jschoone.keys
    internal_interface: 'eth1'
  tasks:
  - name: Add Group {{ deploy_user }}
    ansible.builtin.group:
      name: "{{ deploy_user }}"
  - name: Add User {{ deploy_user }}
    ansible.builtin.user:
      name: "{{ deploy_user }}"
      group: "{{ deploy_user }}"
      shell: "/bin/bash"
  - name: Add Authorized Keys for {{ deploy_user }}
    ansible.posix.authorized_key:
      user: "{{ item }}"
      key: "{{ deploy_user_sshkey }}"
    with_items:
    - "{{ deploy_user }}"
    - "vagrant"
  - name: Add sudoers for user {{ deploy_user }}
    ansible.builtin.lineinfile:
      create: true
      line: "{{ deploy_user }} ALL=(ALL) NOPASSWD:ALL"
      path: /etc/sudoers.d/{{ deploy_user }}
  - name: Set hostname to {{ inventory_hostname }}
    hostname:
      name: "{{ inventory_hostname }}"
  - name: Build /etc/hosts file
    ansible.builtin.blockinfile:
      create: true
      path: /etc/hosts
      block: |
          {% for host in groups['all'] %}
          {{ hostvars[host]['ansible_facts'][internal_interface]['ipv4']['address'] }} {{ host }}
          {% endfor %}
  - name: Build inventory hosts
    delegate_to: localhost
    become: false
    ansible.builtin.blockinfile:
      create: true
      path: "{{ playbook_dir }}/hosts"
      block: |
          [controller]
          {% for host in groups['all'] %}
          {% if "controller" in host %}
          {{ host }} ansible_host={{ hostvars[host]['ansible_facts'][internal_interface]['ipv4']['address'] | default( hostvars[host]['ansible_ssh_host'] ) }} ansible_user={{ deploy_user }}
          {% endif %}
          {% endfor %}

          [worker]
          {% for host in groups['all'] %}
          {% if "worker" in host %}
          {{ host }} ansible_host={{ hostvars[host]['ansible_facts'][internal_interface]['ipv4']['address'] | default( hostvars[host]['ansible_ssh_host'] ) }} ansible_user={{ deploy_user }}
          {% endif %}
          {% endfor %}

          [loadbalancer]
          {% for host in groups['all'] %}
          {% if "loadbalancer" in host %}
          {{ host }} ansible_host={{ hostvars[host]['ansible_facts'][internal_interface]['ipv4']['address'] | default( hostvars[host]['ansible_ssh_host'] ) }} ansible_user={{ deploy_user }}
          {% endif %}
          {% endfor %}
  - name: Disable swap permanently
    ansible.builtin.systemd:
      service: swap.target
      masked: true
    register: mask_swap
  - name: Disable swap
    shell: swapoff -a
    when: mask_swap.changed
